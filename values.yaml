# Default values for ocspd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Configure the Play secret for the OCSPd instance.
## As this is used for cryptographic purposes, it should be fetched
## from the environment.
##
## ref https://www.playframework.com/documentation/2.8.x/ApplicationSecret
## @param appSecret [object] Application secret used for encrypting session data and cookies
## E.g.
## appSecret:
##   valueFrom:
##     secretKeyRef:
##       name: horizon-secret
##       key: appSecret
##
appSecret:
  secretName: ""
  secretKey: ""

## A valid OCSPd license is required for the software to run.
## You should store it (base64-encoded) in a Kubernetes secret and specify
## the secret details here.
## @param license.secretName Existing secret name where the Stream license is stored
## @param license.secretKey Existing secret key where the Stream license is stored
license:
  secretName: ""
  secretKey: ""

logFormat: json

replicaCount: 1

image:
  repository: registry.evertrust.io
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
  # fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# The following service and ingress are created to load balance
# between all app instances, as usually expected for a Kubernetes service.
service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: false
  className: ""
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hostname: ""
  tls: false

# The following services and ingresses are created for each app instance
# (ie. for administrative and configuration purposes)
services:
  type: ClusterIP
  port: 9000

ingresses:
  enabled: false
  className: ""
  annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hostnames: [ ]
    # - ocsp1.k8s.local
    # - ocsp2.k8s.local
  tlsSecrets: { }
    #    ocsp1.k8s.local: ocsp1-tls
    #    ocsp2.k8s.local: ocsp2-tls

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

# Used to configure the database connection and store CRLs on filesystem.
persistence:
  storageClass: "-"
  accessMode: ReadWriteOnce
  size: 1Gi

# Extra environment variables
env: []